{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAbAO,SAASC,cAAc,SA2C/BC,iBAAiB,UA1BDC,IACnBA,EAAEC,iBACGD,EAAEE,OAAOC,QAId,MACEC,UAAYd,MAAAe,EAAKC,KAAEA,EAAIC,OAAEA,IACvBP,EAAEQ,cAEN,IAAIC,EAAaC,OAAOL,EAAMM,OAE9B,IAAK,IAAIC,EAAI,EAAGA,GAAKF,OAAOH,EAAOI,OAAQC,IACzCxB,EAAcwB,EAAGH,GACdI,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA4B,OAAOC,QAAQ,uBAAqB1B,QAAiBC,MAAU,IAEhE0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA4B,OAAOG,QAAQ,sBAAoB5B,QAAeC,MAAU,IAEhEmB,GAAcC,OAAOJ,EAAKK,OAG5BX,EAAEQ,cAAcU,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst onSubmitForm = e => {\n  e.preventDefault();\n  if (!e.target.tagName === 'BUTTON') {\n    return\n  };\n\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n\n  let delayInput = Number(delay.value);\n\n  for (let i = 1; i <= Number(amount.value); i++) {\n    createPromise(i, delayInput)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delayInput += Number(step.value);\n  }\n\n  e.currentTarget.reset();\n};\n\nform.addEventListener('submit', onSubmitForm);"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","e","preventDefault","target","tagName","elements","delay1","step","amount","currentTarget","delayInput","Number","value","i","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.2b29a9ca.js.map"}